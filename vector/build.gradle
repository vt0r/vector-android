apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    defaultConfig {
        applicationId "im.vector"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 13
        versionName "0.3.1"
    }

    final Console console = System.console();
    signingConfigs {
        releaseSigning {
            storeFile file(System.getenv("ANDROID_KEYSTORE"))
            keyAlias System.getenv("ANDROID_KEYALIAS")
            storePassword "FakePassword"
            keyPassword "FakePassword"
        }
    }

    task checkPasswords << {
        def keyStorePass = new String(console.readPassword("\nKeystore password: "))
        def keyPass  = new String(console.readPassword("Key password: "))
        android.signingConfigs.releaseSigning.storePassword = keyStorePass
        android.signingConfigs.releaseSigning.keyPassword = keyPass
    }

    tasks.whenTaskAdded { theTask ->
        if (theTask.name.equals("packageAlphaRelease")) {
            theTask.dependsOn "checkPasswords"
        }
    }

    buildTypes {

        debug {
            resValue "string", "git_revision", "\"${gitRevision()}\""
            resValue "string", "git_revision_unix_date", "\"${gitRevisionUnixDate()}\""
            resValue "string", "git_revision_date", "\"${gitRevisionDate()}\""
        }

        release {
            resValue "string", "git_revision", "\"${gitRevision()}\""
            resValue "string", "git_revision_unix_date", "\"${gitRevisionUnixDate()}\""
            resValue "string", "git_revision_date", "\"${gitRevisionDate()}\""
            shrinkResources true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSigning
        }

        matrixorg.initWith(buildTypes.release)
        matrixorg {
            signingConfig signingConfigs.releaseSigning
        }
    }

    productFlavors {
        alpha {
            applicationId "im.vector.alpha"
            versionCode 13
            versionName "0.3.1"
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    repositories {
        flatDir {
            dir 'libs'
        }

        maven {
            url "https://s3.amazonaws.com/repo.commonsware.com"
        }
    }
}

def gitRevision() {
    def cmd = "git rev-parse --short HEAD"
    return cmd.execute().text.trim()
}

def gitRevisionUnixDate() {
    def cmd = "git show -s --format=%ct HEAD^{commit}"
    return cmd.execute().text.trim()
}

def gitRevisionDate() {
    def cmd = "git show -s --format=%ci HEAD^{commit}"
    return cmd.execute().text.trim()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'me.leolin:ShortcutBadger:1.1.2@aar'

    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:cardview-v7:22.0.0'
    compile 'com.android.support:recyclerview-v7:22.0.0'
    compile 'com.google.android.gms:play-services-gcm:8.1.0'
    compile 'com.google.android.gms:play-services-analytics:8.1.0'

    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'io.pristine:libjingle:9690@aar'

    compile 'com.commonsware.cwac:anddown:0.2.+'

    compile(name: 'matrix-sdk', ext: 'aar')
}

